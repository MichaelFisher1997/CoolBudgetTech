---
import HeaderAuthEnhanced from './auth/HeaderAuthEnhanced';
import SearchWithResults from './SearchWithResults';
import DarkModeToggle from './DarkModeToggle';

const locales = [
  { code: 'en', name: 'English' },
  { code: 'fr', name: 'FranÃ§ais' },
  { code: 'de', name: 'Deutsch' }
];

const currencies = [
  { code: 'USD', symbol: '$' },
  { code: 'EUR', symbol: 'â‚¬' },
  { code: 'GBP', symbol: 'Â£' }
];

// Default values for SSR
const currentLocale = 'en';
const currentCurrency = 'GBP';
const darkMode = false;
---

<header class="bg-white shadow-sm dark:bg-gray-800 sticky top-0 z-50">
  <!-- Top bar with account info and quick links -->
  <div class="bg-gray-50 dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <div class="flex h-10 items-center justify-between text-sm">
        <div class="flex items-center space-x-6">
          <span class="text-gray-600 dark:text-gray-300">Free shipping on orders over Â£50</span>
        </div>
        <div class="flex items-center space-x-4">
          <HeaderAuthEnhanced client:load />
          <a href="/help" class="text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white">Help</a>
          <!-- Language Selector -->
          <select 
            id="language-selector"
            class="bg-transparent border-none text-gray-600 dark:text-gray-300 text-sm focus:outline-none"
          >
            {locales.map((loc) => (
              <option value={loc.code} selected={loc.code === currentLocale}>{loc.name}</option>
            ))}
          </select>
          <!-- Currency Selector -->
          <select 
            id="currency-selector"
            class="bg-transparent border-none text-gray-600 dark:text-gray-300 text-sm focus:outline-none"
          >
            {currencies.map((curr) => (
              <option value={curr.code} selected={curr.code === currentCurrency}>{curr.code}</option>
            ))}
          </select>
        </div>
      </div>
    </div>
  </div>

  <!-- Main header -->
  <div class="mx-auto max-w-7xl px-4 py-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center">
          <div class="flex h-10 w-10 items-center justify-center rounded-lg bg-indigo-600 text-white">
            <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
          </div>
          <h1 class="ml-3 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">CoolBudgetTech</h1>
        </a>
      </div>
      
      <!-- Search Bar -->
      <div class="flex flex-1 items-center justify-center px-6">
        <SearchWithResults client:load />
      </div>
      
      <!-- Right side actions -->
      <div class="flex items-center space-x-4">
        <!-- Wishlist -->
        <button class="relative rounded-full p-2 text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700">
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
          </svg>
        </button>
        
        <!-- Dark Mode Toggle -->
        <DarkModeToggle client:load />
        
        <!-- Cart Button -->
        <button id="header-cart-btn" class="relative rounded-full p-2 text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700">
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
          </svg>
          <span class="snipcart-items-count absolute -top-1 -right-1 flex h-5 w-5 items-center justify-center rounded-full bg-indigo-600 text-xs text-white">0</span>
        </button>
      </div>
    </div>
  </div>
  
  <!-- Main Navigation -->
  <nav class="border-t border-gray-200 bg-white dark:border-gray-700 dark:bg-gray-800">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <div class="flex space-x-0">
        <a href="/" class="border-b-2 border-transparent px-4 py-4 text-sm font-medium text-gray-900 hover:border-indigo-300 hover:text-indigo-600 dark:text-white dark:hover:border-indigo-400 dark:hover:text-indigo-400">
          Home
        </a>
        <a href="/categories/headphones" class="border-b-2 border-transparent px-4 py-4 text-sm font-medium text-gray-900 hover:border-indigo-300 hover:text-indigo-600 dark:text-white dark:hover:border-indigo-400 dark:hover:text-indigo-400">
          Headphones
        </a>
        <a href="/categories/music" class="border-b-2 border-transparent px-4 py-4 text-sm font-medium text-gray-900 hover:border-indigo-300 hover:text-indigo-600 dark:text-white dark:hover:border-indigo-400 dark:hover:text-indigo-400">
          Music
        </a>
        <a href="/categories/smart-tech" class="border-b-2 border-transparent px-4 py-4 text-sm font-medium text-gray-900 hover:border-indigo-300 hover:text-indigo-600 dark:text-white dark:hover:border-indigo-400 dark:hover:text-indigo-400">
          Smart Tech
        </a>
        <a href="/categories/speakers" class="border-b-2 border-transparent px-4 py-4 text-sm font-medium text-gray-900 hover:border-indigo-300 hover:text-indigo-600 dark:text-white dark:hover:border-indigo-400 dark:hover:text-indigo-400">
          Speakers
        </a>
        <a href="/categories/gadgets" class="border-b-2 border-transparent px-4 py-4 text-sm font-medium text-gray-900 hover:border-indigo-300 hover:text-indigo-600 dark:text-white dark:hover:border-indigo-400 dark:hover:text-indigo-400">
          Gadgets
        </a>
        <a href="/categories/accessories" class="border-b-2 border-transparent px-4 py-4 text-sm font-medium text-gray-900 hover:border-indigo-300 hover:text-indigo-600 dark:text-white dark:hover:border-indigo-400 dark:hover:text-indigo-400">
          Accessories
        </a>
        <div class="ml-auto flex items-center">
          <a href="/deals" class="rounded-md bg-red-600 px-3 py-2 text-sm font-medium text-white hover:bg-red-700">
            ðŸ”¥ Deals
          </a>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  import { initializeStores, darkMode, currency, locale } from '../lib/stores.js';

  // Initialize state
  let currentLocale = localStorage.getItem('locale') || 'en';
  let currentCurrency = localStorage.getItem('currency') || 'GBP';

  // Currency symbols mapping
  const currencySymbols = {
    USD: '$',
    EUR: 'â‚¬',
    GBP: 'Â£'
  };

  // Change locale
  function changeLocale(newLocale) {
    locale.set(newLocale);
    const url = new URL(window.location.href);
    url.pathname = url.pathname.replace(/^\/(en|fr|de)/, `/${newLocale}`);
    window.location.href = url.toString();
  }

  // Change currency
  function changeCurrency(newCurrency) {
    currency.set(newCurrency);
    currentCurrency = newCurrency;
    
    // Update all currency symbols on page immediately
    const symbol = currencySymbols[newCurrency] || 'Â£';
    document.querySelectorAll('.currency-symbol').forEach(el => {
      el.textContent = symbol;
    });
  }


  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    // Initialize stores
    initializeStores();
    
    // Set current values in selectors
    const languageSelector = document.getElementById('language-selector');
    const currencySelector = document.getElementById('currency-selector');
    
    if (languageSelector) {
      languageSelector.value = currentLocale;
    }
    
    if (currencySelector) {
      currencySelector.value = currentCurrency;
    }

    // Add event listeners
    if (languageSelector) {
      languageSelector.addEventListener('change', (e) => {
        changeLocale(e.target.value);
      });
    }
    
    if (currencySelector) {
      currencySelector.addEventListener('change', (e) => {
        changeCurrency(e.target.value);
      });
    }

  });
</script>
